/*
 * Copyright (c) 2019 askmeaboutloom
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
#include <rouse.h>
#include "lua_inc.h"
#include "intern.h"
#include "util.h"

@xl

PPTYPE R_Nvg
UTYPE NVGcolor
UTYPE R_LuaNvgTransform

PPTYPE R_TextField R.TextField

CONSTRUCTOR new()
    int argc = lua_gettop(L);
    RETVAL   = R_text_field_new();
LEAVE
    if (argc >= 1) {
        lua_getfield(L, -1, "set");
        lua_pushvalue(L, -2);
        lua_pushvalue(L, 1);
        lua_call(L, 2, 0);
    }
END

DESTRUCTOR = R_text_field_decref


INDEX R_String *string
    R_MAGIC_CHECK(R_TextField, self);
    RETVAL = self->string;
END

NEWINDEX <LEN>const char *string
    R_MAGIC_CHECK(R_TextField, self);
    R_String *string = self->string;
    if (string) {
        R_string_clear(string);
        R_string_append_bin(string, VALUE, VALUE_len);
    }
    else {
        self->string = R_string_from_bin(VALUE, VALUE_len);
    }
END

INDEXFIELD int refs

FIELD int      font
FIELD NVGcolor color
FIELD float    size
FIELD float    blur
FIELD float    spacing
FIELD float    line_height
FIELD int      align
FIELD float    x
FIELD float    y
FIELD float    width

SETFROMTABLE set


METHOD void draw(R_Nvg *nvg, R_LuaNvgTransform *transform)
    R_text_field_draw(self, R_nvg_context(nvg), transform->matrix);
END


INIT extern R_lua_text_field_init
