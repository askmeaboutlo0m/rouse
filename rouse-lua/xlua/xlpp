#!/usr/bin/env perl
# Copyright (c) 2019 askmeaboutloom
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
use 5.020;
use warnings;

die "Usage: $0 INFILE OUTFILE" if @ARGV != 2;

my ($in_arg, $out_arg) = @ARGV;

my $in;
if ($in_arg eq '-') {
    $in = \*STDIN;
}
else {
    open $in, '<', $in_arg or die "Can't open '$in_arg': $!\n";
}

my $out;
if ($out_arg eq '-') {
    $out = \*STDOUT;
}
else {
    open $out, '>', $out_arg or die "Can't open '$out_arg': $!\n";
}


sub evaluate {
    my ($buf, $out) = @_;
    local *STDOUT = $out;
    eval $buf;
    die $@ if $@;
}


while (<$in>) {
    if (/\A\s*\@\@PERL\s*\z/) {
        my $buf = '';
        while (<$in>) {
            last if /\A\s*\@\@END\s*\z/;
            $buf .= $_;
        }
        evaluate($buf, $out);
    }
    else {
        print {$out} $_;
    }
}


if ($out_arg ne '-') {
    close $out or die "Can't close '$out_arg': $!\n";
}

if ($in_arg ne '-') {
    close $in or warn "Can't close '$in_arg': $!\n";
}
